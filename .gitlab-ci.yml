image: golang:latest

variables:
  ARTIFACT_NAME: turn
  REPO_NAME: kerberos-io/${ARTIFACT_NAME}
  REPO_DIR: gitlab.com/${REPO_NAME}
  CI_VERSION: "1.0.${CI_JOB_ID}"
  DOCKER_HOST: tcp://localhost:2375

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_DIR)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_DIR
  - cd $GOPATH/src/$REPO_DIR

stages:
  - test
  - build
  - docker
# - kubernetes

test:
  stage: test
  script:
    - git config --global url."https://${gitlab_id}:${gitlab_token}@gitlab.com/".insteadOf "https://gitlab.com/"
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

build:
  stage: build
  script:
    - git config --global url."https://${gitlab_id}:${gitlab_token}@gitlab.com/".insteadOf "https://gitlab.com/"
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/$ARTIFACT_NAME
  artifacts:
    paths:
      - $ARTIFACT_NAME

docker:
  image: docker:19.03.12
  stage: docker
  services:
    - docker:18.09.7-dind
  script:
    - docker login -u ${gitlab_id} -p ${gitlab_token} $CI_REGISTRY
    - docker build --build-arg gitlab_id=${gitlab_id} --build-arg gitlab_token=${gitlab_token} -t $CI_REGISTRY/$REPO_NAME:$CI_VERSION .
    - docker push $CI_REGISTRY/$REPO_NAME:$CI_VERSION
